//Time and Space complixities are --> O(n) and O(1) respectively

public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        boolean flag = false;
        while(fast != null && fast.next!= null && fast.next.next!= null) {
            slow= slow.next;
            fast = fast.next.next;

            if(slow == fast) {
                flag = true;
                break;
            }
           
        }
        if(!flag) return null;
         slow = head;   // resetting the slow pointer to head
            while(slow!=fast) {
                slow= slow.next;
                fast = fast.next;
            }
            return fast;
    }
}
